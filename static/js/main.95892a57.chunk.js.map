{"version":3,"sources":["components/common/input/Input.jsx","components/common/select/Select.jsx","components/common/form/Form.jsx","components/tile/Tile.jsx","components/tileList/TileList.jsx","containers/appointmentPage/AppointmentPage.jsx","containers/contactsPage/ContactsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","name","value","type","onChange","error","placeholder","min","rest","className","Select","options","id","aria-selected","map","option","Form","state","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","obj","handleChange","input","target","errorMessage","setState","handleSubmit","e","preventDefault","doSubmit","renderInput","renderSelect","renderButton","label","duplicate","onClick","Component","Tile","itemArray","Object","values","index","TileList","items","AppointmentPage","title","contact","date","time","string","required","props","onAddAppointment","getTodayString","Date","toLocaleDateString","split","month","day","year","padStart","this","appointments","contacts","onSubmit","ContactsPage","phone","email","duplicateName","regex","onAddContact","App","useState","setContacts","setAppointments","ROUTES","to","activeClassName","prev","appointment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAEe,SAASA,EAAT,GASX,IARFC,EAQC,EARDA,KACAC,EAOC,EAPDA,MACAC,EAMC,EANDA,KACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,IACGC,EACF,8EACD,OACE,sBAAKC,UAAU,aAAf,UACE,iDACMD,GADN,IAEEP,KAAMA,EACNC,MAAOA,EACPC,KAAMA,EACNC,SAAUA,EACVE,YAAaA,EACbC,IAAKA,EACLE,UAAU,kBAEXJ,GAAS,qBAAKI,UAAU,qBAAf,SAAqCJ,OCtBtC,SAASK,EAAT,GAA8D,IAA5CT,EAA2C,EAA3CA,KAAMU,EAAqC,EAArCA,QAASN,EAA4B,EAA5BA,MAAOD,EAAqB,EAArBA,SAAaI,EAAQ,qDAC1E,OACE,gCACE,iDAAQP,KAAMA,EAAMW,GAAIX,EAAMG,SAAUA,GAAcI,GAAtD,cACE,wBAAQN,MAAM,GAAGW,iBAAA,EAAjB,iCAGCF,EAAQG,KAAI,SAACC,GAAD,OACX,wBAA0Bb,MAAOa,EAAOd,KAAxC,SACGc,EAAOd,MADGc,EAAOd,aAKvBI,GAAS,qBAAKI,UAAU,qBAAf,SAAqCJ,O,ICVhCW,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,SAAW,WACT,IACQf,EAAUgB,IAAID,SAAS,EAAKH,MAAMC,KAAM,EAAKI,OADrC,CAAEC,YAAY,IACtBlB,MACR,IAAKA,EAAO,OAAO,KAEnB,IALe,EAKTc,EAAS,GALA,cAMEd,EAAMmB,SANR,IAMf,2BAAgC,CAAC,IAAxBC,EAAuB,QAC9BN,EAAOM,EAAKC,MAAQD,EAAKE,SAPZ,8BASf,OAAOR,G,EAGTS,iBAAmB,YAAsB,IAAnB3B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpB2B,EAAG,eAAM5B,EAAOC,GAChBoB,EAAM,eAAMrB,EAAO,EAAKqB,OAAOrB,IAC7BI,EAAUgB,IAAID,SAASS,EAAKP,GAA5BjB,MAER,OAAOA,EAAQA,EAAMmB,QAAQ,GAAGG,QAAU,M,EAG5CG,aAAe,YAAwB,IAAbC,EAAY,EAApBC,OACVb,EAAM,eAAQ,EAAKF,MAAME,QACzBc,EAAe,EAAKL,iBAAiBG,GACvCE,EAAcd,EAAOY,EAAM9B,MAAQgC,SAC3Bd,EAAOY,EAAM9B,MAJW,IAK5BiB,EAAS,EAAKD,MAAdC,KACRA,EAAKa,EAAM9B,MAAQ8B,EAAM7B,MACzB,EAAKgC,SAAS,CAAEhB,OAAMC,Y,EAGxBgB,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMlB,EAAS,EAAKC,SAAS,EAAKH,MAAMC,MACxC,EAAKgB,SAAS,CAAEf,OAAQA,GAAU,KAE9BA,GAEJ,EAAKmB,Y,EAGPC,YAAc,SAACtC,EAAMK,GAAqC,IAAxBH,EAAuB,uDAAhB,OAAQI,EAAQ,yCAC9B,EAAKU,MAAtBC,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,OACd,OACE,cAACnB,EAAD,CACEC,KAAMA,EACNE,KAAMA,EACND,MAAOgB,EAAKjB,GACZG,SAAU,EAAK0B,aACfzB,MAAOc,EAAOlB,GACdK,YAAaA,EACbC,IAAKA,K,EAKXiC,aAAe,SAACvC,EAAMU,GAAa,IACzBQ,EAAW,EAAKF,MAAhBE,OACR,OACE,cAACT,EAAD,CACET,KAAMA,EACNU,QAASA,EACTP,SAAU,EAAK0B,aACfzB,MAAOc,EAAOlB,M,EAKpBwC,aAAe,SAACC,EAAOjC,EAAWkC,GAChC,OACE,wBAAQlC,UAAWA,EAAWmC,QAAS,EAAKT,aAA5C,SACGQ,EAAY,kBAAoBD,K,YA5EPG,aCHnB,SAASC,EAAT,GAAyB,IAATrB,EAAQ,EAARA,KACvBsB,EAAYC,OAAOC,OAAOxB,GAChC,OACE,qBAAKhB,UAAU,iBAAf,SACGsC,EAAUjC,KAAI,SAACZ,EAAOgD,GAAR,OACb,mBAAezC,UAAqB,IAAVyC,EAAc,aAAe,OAAvD,SACGhD,GADKgD,QCJD,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,mCACGA,EAAMtC,KAAI,SAACW,EAAMyB,GAAP,OACT,cAACJ,EAAD,CAAkBrB,KAAMA,GAAbyB,Q,ICFEG,E,4MACnBpC,MAAQ,CACNC,KAAM,CAAEoC,MAAO,GAAIC,QAAS,GAAIC,KAAM,GAAIC,KAAM,IAChDtC,OAAQ,I,EAGVG,OAAS,CACPgC,MAAOjC,IAAIqC,SAASC,WAAWjB,MAAM,SACrCa,QAASlC,IAAIqC,SAASC,WAAWjB,MAAM,WACvCc,KAAMnC,IAAImC,OAAOG,WAAWjB,MAAM,QAClCe,KAAMpC,IAAIqC,SAASC,WAAWjB,MAAM,S,EAGtCJ,SAAW,WAAO,IACRpB,EAAS,EAAKD,MAAdC,KACR,EAAK0C,MAAMC,iBAAiB3C,GAC5B,EAAKgB,SAAS,CAAEhB,KAAM,CAAEoC,MAAO,GAAIC,QAAS,GAAIC,KAAM,GAAIC,KAAM,O,EAGlEK,eAAiB,WAAO,IAAD,GACM,IAAIC,MAC5BC,mBAAmB,SACnBC,MAAM,KAHY,mBACdC,EADc,KACPC,EADO,KACFC,EADE,KAIrB,MAAM,GAAN,OAAUA,EAAV,YAAkBF,EAAMG,SAAS,EAAG,KAApC,YAA4CF,EAAIE,SAAS,EAAG,O,4CAG9D,WAAU,IAAD,EAC4BC,KAAKV,MAAhCW,EADD,EACCA,aAAcC,EADf,EACeA,SACtB,OACE,gCACE,oCACE,iDACA,uBAAMC,SAAUH,KAAKnC,aAArB,UACGmC,KAAK/B,YAAY,QAAS,oBAC1B+B,KAAK/B,YACJ,OACA,mBACA,OACA+B,KAAKR,kBAENQ,KAAK/B,YAAY,OAAQ,aAAc,QACvC+B,KAAK9B,aAAa,UAAWgC,GAC7BF,KAAK7B,aAAa,gBAGvB,oCACE,8CACA,cAACU,EAAD,CAAUC,MAAOmB,c,GA/CkBvD,GCAxB0D,E,4MACnBzD,MAAQ,CACNC,KAAM,CAAEjB,KAAM,GAAI0E,MAAO,GAAIC,MAAO,IACpCzD,OAAQ,GACR0D,eAAe,G,EAGjBvD,OAAS,CACPrB,KAAMoB,IAAIqC,SAASnD,IAAI,GAAGoD,WAAWjB,MAAM,QAC3CiC,MAAOtD,IAAIqC,SACRnD,IAAI,IACJuE,MAAM,wCACNnB,WACAjB,MAAM,gBACTkC,MAAOvD,IAAIqC,SAASkB,QAAQjB,WAAWjB,MAAM,U,EAG/CJ,SAAW,WAAO,IAAD,IACiB,EAAKrB,MAA7BC,EADO,EACPA,KAAM2D,EADC,EACDA,cADC,cAEI,EAAKjB,MAAMR,OAFf,IAEf,2BAAqC,CACnC,GADmC,QAC1BnD,OAASiB,EAAKjB,KACrB,OAAO,EAAKiC,SAAS,CAAE2C,eAAe,KAJ3B,8BAMf,GAAIA,EAAe,MAAO,iBAExB,EAAKjB,MAAMmB,aAAa7D,GACxB,EAAKgB,SAAS,CAAEhB,KAAM,CAAEjB,KAAM,GAAI0E,MAAO,GAAIC,MAAO,O,4CAIxD,WACE,OACE,gCACE,oCACE,6CACA,uBAAMH,SAAUH,KAAKnC,aAArB,UACGmC,KAAK/B,YAAY,OAAQ,kBACzB+B,KAAK/B,YAAY,QAAS,0BAC1B+B,KAAK/B,YAAY,QAAS,4BAC1B+B,KAAK7B,aACJ,SACA,aACA6B,KAAKrD,MAAM4D,qBAIjB,uBACA,oCACE,0CACA,cAAC1B,EAAD,CAAUC,MAAOkB,KAAKV,MAAMR,kB,GAjDIpC,G,MC6C3BgE,MA5Cf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNT,EADM,KACIU,EADJ,OAM2BD,mBAAS,IANpC,mBAMNV,EANM,KAMQY,EANR,KAWPC,EACM,YADNA,EAEU,gBAGhB,OACE,sBAAK3E,UAAU,MAAf,UACE,gCACE,cAAC,IAAD,CAAS4E,GAAID,EAAiBE,gBAAgB,SAA9C,sBAGA,cAAC,IAAD,CAASD,GAAID,EAAqBE,gBAAgB,SAAlD,6BAIF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO5D,KAAM0D,EAAb,SACE,cAAC,EAAD,CAAchC,MAAOoB,EAAUO,aA3BtB,SAACxB,GAClB2B,GAAY,SAACK,GAAD,4BAAcA,GAAd,CAAoBhC,YA4B1B,cAAC,IAAD,CAAO7B,KAAM0D,EAAb,SACE,cAAC,EAAD,CACEb,aAAcA,EACdC,SAAUA,EACVX,iBA5BW,SAAC2B,GACtBL,GAAgB,SAACI,GAAD,4BAAcA,GAAd,CAAoBC,qBCFzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95892a57.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Input({\n  name,\n  value,\n  type,\n  onChange,\n  error,\n  placeholder,\n  min,\n  ...rest\n}) {\n  return (\n    <div className=\"form-group\">\n      <input\n        {...rest}\n        name={name}\n        value={value}\n        type={type}\n        onChange={onChange}\n        placeholder={placeholder}\n        min={min}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Select({ name, options, error, onChange, ...rest }) {\n  return (\n    <div>\n      <select name={name} id={name} onChange={onChange} {...rest}>\n        <option value=\"\" aria-selected>\n          No contact selected\n        </option>\n        {options.map((option) => (\n          <option key={option.name} value={option.name}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../input/Input\";\nimport Select from \"../select/Select\";\n\nexport default class Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n      errors[item.path] = item.message;\n    }\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleChange = ({ target: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const { data } = this.state;\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate(this.state.data);\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  renderInput = (name, placeholder, type = \"text\", min) => {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        name={name}\n        type={type}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]}\n        placeholder={placeholder}\n        min={min}\n      />\n    );\n  };\n\n  renderSelect = (name, options) => {\n    const { errors } = this.state;\n    return (\n      <Select\n        name={name}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  };\n\n  renderButton = (label, className, duplicate) => {\n    return (\n      <button className={className} onClick={this.handleSubmit}>\n        {duplicate ? \"Contact exists!\" : label}\n      </button>\n    );\n  };\n}\n","import React from \"react\";\n\nexport default function Tile({ item }) {\n  const itemArray = Object.values(item);\n  return (\n    <div className=\"tile-container\">\n      {itemArray.map((value, index) => (\n        <p key={index} className={index === 0 ? \"tile-title\" : \"tile\"}>\n          {value}\n        </p>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Tile from \"../tile/Tile\";\n\nexport default function TileList({ items }) {\n  return (\n    <>\n      {items.map((item, index) => (\n        <Tile key={index} item={item} />\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../components/common/form/Form\";\nimport TileList from \"../../components/tileList/TileList\";\n\nexport default class AppointmentPage extends Form {\n  state = {\n    data: { title: \"\", contact: \"\", date: \"\", time: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    title: Joi.string().required().label(\"Title\"),\n    contact: Joi.string().required().label(\"Contact\"),\n    date: Joi.date().required().label(\"Date\"),\n    time: Joi.string().required().label(\"Time\"),\n  };\n\n  doSubmit = () => {\n    const { data } = this.state;\n    this.props.onAddAppointment(data);\n    this.setState({ data: { title: \"\", contact: \"\", date: \"\", time: \"\" } });\n  };\n\n  getTodayString = () => {\n    const [month, day, year] = new Date()\n      .toLocaleDateString(\"en-US\")\n      .split(\"/\");\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n  };\n\n  render() {\n    const { appointments, contacts } = this.props;\n    return (\n      <div>\n        <section>\n          <h1>Add Appointment</h1>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"title\", \"Title: something\")}\n            {this.renderInput(\n              \"date\",\n              \"Date: 03/15/2021\",\n              \"date\",\n              this.getTodayString(),\n            )}\n            {this.renderInput(\"time\", \"Time: 6:40\", \"time\")}\n            {this.renderSelect(\"contact\", contacts)}\n            {this.renderButton(\"Submit\")}\n          </form>\n        </section>\n        <section>\n          <h2>Appointments</h2>\n          <TileList items={appointments} />\n        </section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport TileList from \"../../components/tileList/TileList\";\nimport Form from \"../../components/common/form/Form\";\n\nexport default class ContactsPage extends Form {\n  state = {\n    data: { name: \"\", phone: \"\", email: \"\" },\n    errors: {},\n    duplicateName: false,\n  };\n\n  schema = {\n    name: Joi.string().min(5).required().label(\"Name\"),\n    phone: Joi.string()\n      .min(10)\n      .regex(/((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}/)\n      .required()\n      .label(\"Phone Number\"),\n    email: Joi.string().email().required().label(\"Email\"),\n  };\n\n  doSubmit = () => {\n    const { data, duplicateName } = this.state;\n    for (const item of this.props.items) {\n      if (item.name === data.name)\n        return this.setState({ duplicateName: true });\n    }\n    if (duplicateName) return \"Contact exists\";\n    else {\n      this.props.onAddContact(data);\n      this.setState({ data: { name: \"\", phone: \"\", email: \"\" } });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <section>\n          <h2>Add Contact</h2>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"name\", \"Name: John Doe\")}\n            {this.renderInput(\"phone\", \"Phone#: (415) 333-3333\")}\n            {this.renderInput(\"email\", \"Email: johnDoe@email.com\")}\n            {this.renderButton(\n              \"Submit\",\n              \"submit-btn\",\n              this.state.duplicateName,\n            )}\n          </form>\n        </section>\n        <hr />\n        <section>\n          <h2>Contacts</h2>\n          <TileList items={this.props.items} />\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport AppointmentPage from \"./containers/appointmentPage/AppointmentPage\";\nimport ContactsPage from \"./containers/contactsPage/ContactsPage\";\nimport \"./App.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const addContact = (contact) => {\n    setContacts((prev) => [...prev, contact]);\n  };\n\n  const [appointments, setAppointments] = useState([]);\n  const addAppointment = (appointment) => {\n    setAppointments((prev) => [...prev, appointment]);\n  };\n\n  const ROUTES = {\n    CONTACTS: \"/contacts\",\n    APPOINTMENTS: \"/appointments\",\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\n          Contacts\n        </NavLink>\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\n          Appointments\n        </NavLink>\n      </nav>\n      <main>\n        <Switch>\n          <Route path={ROUTES.CONTACTS}>\n            <ContactsPage items={contacts} onAddContact={addContact} />\n          </Route>\n          <Route path={ROUTES.APPOINTMENTS}>\n            <AppointmentPage\n              appointments={appointments}\n              contacts={contacts}\n              onAddAppointment={addAppointment}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}